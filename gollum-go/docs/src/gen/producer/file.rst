.. Autogenerated by Gollum RST generator (docs/generator/*.go)

File
====

The file producer writes messages to a file. This producer also allows log
rotation and compression of the rotated logs. Folders in the file path will
be created if necessary.

Each target file will handled with separated batch processing.




Parameters
----------

**Enable** (default: true)

  Switches this plugin on or off.
  

**File**

  This value contains the path to the log file to write. The wildcard character "*"
  can be used as a placeholder for the stream name.
  By default this parameter is set to "/var/log/gollum.log".
  
  

**FileOverwrite**

  This value causes the file to be overwritten instead of appending new data
  to it.
  By default this parameter is set to "false".
  
  

**Permissions** (default: 0644)

  Defines the UNIX filesystem permissions used when creating
  the named file as an octal number.
  By default this paramater is set to "0664".
  
  

**FolderPermissions** (default: 0755)

  Defines the UNIX filesystem permissions used when creating
  the folders as an octal number.
  By default this paramater is set to "0755".
  
  

Parameters (from components.BatchedWriterConfig)
------------------------------------------------

**Batch/TimeoutSec** (default: 5, unit: sec)

  This value defines the maximum number of seconds to wait after the last
  message arrived before a batch is flushed automatically.
  By default this parameter is set to "5".
  
  

**Batch/MaxCount** (default: 8192)

  This value defines the maximum number of messages that can be buffered
  before a flush is mandatory. If the buffer is full and a flush is still
  underway or cannot be triggered out of other reasons, the producer will block.
  By default this parameter is set to "8192".
  
  

**Batch/FlushCount** (default: 4096)

  This value defines the number of messages to be buffered before they are
  written to disk. This setting is clamped to "BatchMaxCount".
  By default this parameter is set to "`BatchMaxCount` / 2".
  
  

**Batch/FlushTimeoutSec** (default: 0, unit: sec)

  This value defines the maximum number of seconds to wait before
  a flush is aborted during shutdown. Set this parameter to "0" which does not abort
  the flushing procedure.
  By default this parameter is set to "0".
  
  

Parameters (from components.RotateConfig)
-----------------------------------------

**Rotation/Enable** (default: false)

  If this value is set to "true" the logs will rotate after reaching certain thresholds.
  By default this parameter is set to "false".
  
  

**Rotation/TimeoutMin** (default: 1440, unit: min)

  This value defines a timeout in minutes that will cause the logs to
  rotate. Can be set in parallel with RotateSizeMB.
  By default this parameter is set to "1440".
  
  

**Rotation/SizeMB** (default: 1024, unit: mb)

  This value defines the maximum file size in MB that triggers a file rotate.
  Files can get bigger than this size.
  By default this parameter is set to "1024".
  
  

**Rotation/Timestamp** (default: 2006-01-02_15)

  This value sets the timestamp added to the filename when file rotation
  is enabled. The format is based on Go's time.Format function.
  By default this parameter is to to "2006-01-02_15".
  
  

**Rotation/ZeroPadding** (default: 0)

  This value sets the number of leading zeros when rotating files with
  an existing name. Setting this setting to 0 won't add zeros, every other
  number defines the number of leading zeros to be used.
  By default this parameter is set to "0".
  
  

**Rotation/Compress** (default: false)

  This value defines if a rotated logfile is to be gzip compressed or not.
  By default this parameter is set to "false".
  
  

**Rotation/At**

  This value defines a specific time for rotation in hh:mm format.
  By default this parameter is set to "".
  
  

**Rotation/AtHour** (default: -1)

  (no documentation available)
  

**Rotation/AtMin** (default: -1)

  (no documentation available)
  

Parameters (from core.SimpleProducer)
-------------------------------------

**Streams**

  Defines a list of streams the producer will receive from. This
  parameter is mandatory. Specifying "*" causes the producer to receive messages
  from all streams except internal internal ones (e.g. _GOLLUM_).
  By default this parameter is set to an empty list.
  
  

**FallbackStream**

  Defines a stream to route messages to if delivery fails.
  The message is reset to its original state before being routed, i.e. all
  modifications done to the message after leaving the consumer are removed.
  Setting this paramater to "" will cause messages to be discared when delivery
  fails.
  
  

**ShutdownTimeoutMs** (default: 1000, unit: ms)

  Defines the maximum time in milliseconds a producer is
  allowed to take to shut down. After this timeout the producer is always
  considered to have shut down.  Decreasing this value may lead to lost
  messages during shutdown. Raising it may increase shutdown time.
  
  

**Modulators**

  Defines a list of modulators to be applied to a message when
  it arrives at this producer. If a modulator changes the stream of a message
  the message is NOT routed to this stream anymore.
  By default this parameter is set to an empty list.
  
  

Parameters (from file.Pruner)
-----------------------------

**Prune/Count** (default: 0)

  this value removes old logfiles upon rotate so that only the given
  number of logfiles remain. Logfiles are located by the name defined by "File"
  and are pruned by date (followed by name). Set this value to "0" to disable pruning by count.
  By default this parameter is set to "0".
  
  

**Prune/AfterHours** (default: 0)

  This value removes old logfiles that are older than a given number
  of hours. Set this value to "0" to disable pruning by lifetime.
  By default this parameter is set to "0".
  
  

**Prune/TotalSizeMB** (default: 0, unit: mb)

  This value removes old logfiles upon rotate so that only the
  given number of MBs are used by logfiles. Logfiles are located by the name
  defined by "File" and are pruned by date (followed by name).
  Set this value to "0" to disable pruning by file size.
  By default this parameter is set to "0".
  
  

Examples
--------

This example will write the messages from all streams to `/tmp/gollum.log`
after every 64 message or after 60sec:

.. code-block:: yaml

	 fileOut:
	   Type: producer.File
	   Streams: "*"
	   File: /tmp/gollum.log
	   Batch:
	     MaxCount: 128
	     FlushCount: 64
	     TimeoutSec: 60
	     FlushTimeoutSec: 3





